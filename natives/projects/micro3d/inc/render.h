/* DO NOT EDIT THIS FILE - it is machine generated */ // generated with javah
#include <jni.h>
/* Header for class ru_woesss_j2me_micro3d_v3_Render */

#ifndef _Included_ru_woesss_j2me_micro3d_v3_Render
#define _Included_ru_woesss_j2me_micro3d_v3_Render
#ifdef __cplusplus
extern "C" {
#endif

    
JNIEXPORT jlong JNICALL Java_ru_woesss_j2me_micro3d_Render__1eglInit
    (JNIEnv *env, jclass);
    
JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1eglMakeSurface
    (JNIEnv *env, jclass, jlong ptr, jint width, jint height);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1eglBind
    (JNIEnv *env, jclass, jlong ptr);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1eglRelease
    (JNIEnv *env, jclass, jlong ptr);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1eglDestroy
    (JNIEnv *env, jclass, jlong ptr);

JNIEXPORT jstring JNICALL Java_ru_woesss_j2me_micro3d_Render__1getGLError
        (JNIEnv *env, jclass);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glSetVp1
        (JNIEnv *env, jclass /*clazz*/,
         jint width, jint height);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glSetVp2
        (JNIEnv *env, jclass /*clazz*/,
         jint width, jint height);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glSetClip1
        (JNIEnv *env, jclass /*clazz*/,
        jlong handle, int x, int y, jint width, jint height);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glClearDepth
        (JNIEnv *env, jclass /*clazz*/);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glClearWithColor
        (JNIEnv *env, jclass /*clazz*/,
         jint clearColor);


JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glApplyBlending
        (JNIEnv *env, jclass /*clazz*/,
         jint blendMode);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glBindBgTexture
        (JNIEnv *env, jclass /*clazz*/,
         jintArray bgTextureIdArr, jboolean filter);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glBlitToTexture
        (JNIEnv *env, jclass /*clazz*/,
         jintArray pixelsArr, jint width, jint height);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glcopy2DScreen
        (JNIEnv *env, jclass /*clazz*/,
         jint aposition, jint atexture, jboolean preProcess);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1bindBT1
        (JNIEnv *env, jclass /*clazz*/,
         jintArray bufHandlesArr, jobject vertices, jobject texCoords, jobject normals);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1rfPart1
        (JNIEnv *env, jclass /*clazz*/,
         jboolean doDepthMask);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1rfPolyT
        (JNIEnv *env, jclass /*clazz*/,
         jintArray bufHandlesArr, jint aPosition, jint aColorData, jint aMaterial, jint aNormal);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glEVAA
        (JNIEnv *env, jclass /*clazz*/,
        jint arr);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glDVAA
        (JNIEnv *env, jclass /*clazz*/,
        jint arr);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glUnbindABuffer
        (JNIEnv *env, jclass /*clazz*/);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glDisableBlending
        (JNIEnv *env, jclass /*clazz*/);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1rfPolyC
        (JNIEnv *env, jclass /*clazz*/,
         jintArray bufHandlesArr, jint offset, jint aPosition, jint aColorData, jint aMaterial, jint aNormal);


JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glECFDA
        (JNIEnv *env, jclass /*clazz*/, jint e, jint pos, jint cnt);


JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glReadPixelsToBuffer
        (JNIEnv *env, jclass /*clazz*/,
         jint x, jint y, jint width, jint height, jobject buffer);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glReadARGB32PixelsToArray
        (JNIEnv *env, jclass /*clazz*/,
         jint x, jint y, jint width, jint height, jintArray pixelsArr);


JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1flushGl1
        (JNIEnv *env, jclass /*clazz*/, jboolean flush);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glVertexAttrib2f
        (JNIEnv *env, jclass /*clazz*/, jint attrib, jfloat f1, jfloat f2);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glVertexAttrib3f
        (JNIEnv *env, jclass /*clazz*/, jint attrib, jfloat f1, jfloat f2, jfloat f3);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glVertexAttribPointerf
        (JNIEnv *env, jclass /*clazz*/, jint attrib, jint cnt, jboolean sth, jint sth2, jobject buff);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glVertexAttribPointerb
        (JNIEnv *env, jclass /*clazz*/, jint attrib, jint cnt, jboolean sth, jint sth2, jobject buff);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glDrawTriangles
        (JNIEnv *env, jclass /*clazz*/, jint i1, jint i2);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glDrawPoints
        (JNIEnv *env, jclass /*clazz*/, jint i1, jint i2);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glDrawLines
        (JNIEnv *env, jclass /*clazz*/, jint i1, jint i2);


   
JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glSetCullFace
        (JNIEnv *env, jclass /*clazz*/, jboolean enable);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glDepthFuncLess
        (JNIEnv *env, jclass /*clazz*/);

JNIEXPORT void JNICALL Java_ru_woesss_j2me_micro3d_Render__1glRps1
        (JNIEnv *env, jclass /*clazz*/, jint uIsTransparency, jint val, jint numPrimitives);				






















#define MICRO3D_RAISE_EXCEPTION(aEnv, aException, aMsg) {\
                 if (aEnv != NULL){\
                jclass jException = aEnv->FindClass(aException);\
                if (jException != NULL){\
                    aEnv->ThrowNew(jException, aMsg);\
         }}}

#ifdef __cplusplus
}
#endif

#endif //_Included_ru_woesss_j2me_micro3d_v3_Render
